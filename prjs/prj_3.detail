I was working on small operating system project (TachyOS) for very constrained hardware (like 512k Flash / 128k SRAM) personally in 2015, so data structure fullfills such level of limitation was required. I had tried a number of other open source libraries (like OpenBSD, gnulib, etc.) said to be suitable for baremetal project though, nothing was satisfactory for requirement. many of kernel objects (like mutex, thread, message queue, etc.) are managed by key-value data structure (like tree) and size of c struct for tree node is one of the most crucial element to achieve memory efficiency requirement of the system. so I decided to build my own. to reduce the management overhead of the tree I use recursion heavily which is generally not accepted in real world software implementation though, size of pointer, which varies upon hardware architecture, to the parent node could be saved which seems to be little but almost 1/3 of the memory overhead for the tree implementation. well known downside for recursion is potetial stack overflow. but for the balanced tree, recursion depth is kept within safe level. (for experiment with the target hardware, only 2kbytes for 2,000,000 nodes)
